{"version":3,"sources":["components/LoginForm.js","components/Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","Login","error","useState","email","password","details","setDetails","Form","onSubmit","e","preventDefault","className","Group","controlId","Label","Control","type","placeholder","onChange","target","value","Button","variant","quizzes","flowers","score","result","resultColor","fetch","method","then","res","json","data","Homepage","detail","currentQuiz","setCurrentQuiz","currentQuestion","setCurrentQuestion","navQuizBtnHandler","Container","map","flower","i","Figure","onClick","Image","src","picture","alt","Caption","name","Card","Body","id","Row","Col","quiz","choices","choice","htmlFor","checked","answer","setTimeout","style","color","headers","body","JSON","stringify","username","response","console","log","App","adminUser","user","setUser","setError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c52e4666.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nfunction LoginForm({Login,error})\r\n{\r\n    const [details, setDetails]= useState({email:\"admin@admin.com\",password:\"admin123\"});\r\n    const submitHandler=e=>{\r\n        e.preventDefault();\r\n        Login(details);\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} className=\"login-form\">\r\n            <h2 className=\"login-heading\">Login Form</h2>\r\n            {(error!==\"\")?( <div className=\"error\">{error}</div> ):(\"\")}\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\"  onChange={e=> setDetails({...details, email: e.target.value})} value={details.email}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\"  onChange={e=> setDetails({...details, password: e.target.value})} value={details.password} />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" className=\"btn-block\" type=\"submit\">\r\n                Submit\r\n        </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default LoginForm;\r\n","import '../App.css';\r\nimport React, { useState } from 'react';\r\nimport { Container, Figure, Row, Col, Card, Button } from \"react-bootstrap\";\r\n\r\nlet quizzes = [];\r\nlet flowers = [];\r\nlet score = 0;\r\nlet result = '';\r\nlet resultColor = '';\r\n\r\nconst flowersURL = `https://fatimahaldhamen-imagequiz.herokuapp.com/flowers`;\r\nfetch(flowersURL, { method: 'GET' })\r\n.then((res) => res.json())\r\n.then((data) => {\r\n    flowers = data;\r\n});\r\n\r\nconst quizzesURL = `https://fatimahaldhamen-imagequiz.herokuapp.com/quizzes`;\r\nfetch(quizzesURL, { method: 'GET' })\r\n.then((res) => res.json())\r\n.then((data) => {\r\n    quizzes = data;\r\n});\r\n\r\nfunction Homepage(email) {\r\nconst postResults = () =>{\r\n    fetch('https://fatimahaldhamen-imagequiz.herokuapp.com/score', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username: email , score:score})\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => console.log(data));\r\n}\r\n\r\n\r\nconst [currentQuiz, setCurrentQuiz] = useState(-1);\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const imageClickHandler = (e) => {\r\n        setCurrentQuiz(e);\r\n    }\r\n    const answerHandler = (e) => {\r\n        if (quizzes[currentQuiz].quiz[currentQuestion].answer === e) {\r\n            score += 1;\r\n            result = \"Correct\";\r\n            resultColor = 'lime';\r\n        } else {\r\n            result = \"InCorrect\";\r\n            resultColor = 'red';\r\n        }\r\n        setTimeout(() => {\r\n\r\n            setCurrentQuestion(currentQuestion + 1);\r\n            result = '';\r\n        }, 500);\r\n    }\r\n    const navQuizBtnHandler = (e) => {\r\n        if (e === \"home\") {\r\n            setCurrentQuiz(-1);\r\n            setCurrentQuestion(0);\r\n            score = 0;\r\n        } else {\r\n            setCurrentQuestion(0);\r\n            score = 0;\r\n        }\r\n    }\r\n    return (\r\n        (currentQuiz === -1) ? (\r\n            <Container >\r\n                {flowers.map((flower, i) => (\r\n                    <Figure onClick={() => imageClickHandler(i)} key={i}>\r\n                        <Figure.Image src={flower.picture} alt=\"\" />\r\n                        <Figure.Caption >{flower.name}\r\n                        </Figure.Caption>\r\n                    </Figure>\r\n                ))}\r\n            </Container >\r\n        ) : (\r\n            (currentQuestion < 6) ? (<Container>\r\n                <Card className=\"rounded quiz-container\">\r\n                    <Card.Body>\r\n                        <h4 id=\"Qheading\">Select suitable name from the following options by looking at the flower image:</h4>\r\n                        <Row>\r\n                            <Col>\r\n                                <Figure>\r\n                                    <Figure.Image className=\"rounded\" src={quizzes[currentQuiz].quiz[currentQuestion].picture} alt=\"\" />\r\n                                </Figure>\r\n                            </Col>\r\n                            <Col>\r\n                                {quizzes[currentQuiz].quiz[currentQuestion].choices.map((choice, i) => (\r\n                                    <label htmlFor={i + \"option\"} className=\"optionLabel\" key={i}><input key={i} id={i + \"option\"} value={choice} checked={false} onChange={() => answerHandler(choice)} name=\"options\" className=\"mr-2\" type=\"radio\" />{choice}</label>\r\n                                ))}\r\n                                <div id=\"result\" style={{ color: resultColor }}>{result}</div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>) : (<Container className=\"quiz-score-container\">\r\n                <Card className=\"rounded quiz-container\">\r\n                    <Card.Body className=\"quiz-score-container\">\r\n                        <h2 className=\"Score\">\r\n                            {postResults()}\r\n                            Your Score is {score}\r\n                        </h2>\r\n                        <Row className=\"nav-quiz-btn-wrapper\">\r\n                            <Button className=\"nav-quiz-btn btn\" onClick={() => navQuizBtnHandler(\"home\")}>Go to Homepage</Button>\r\n                            <Button className=\"nav-quiz-btn btn\" onClick={() => navQuizBtnHandler(\"\")}>Retry</Button>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>)\r\n        )\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Homepage;","import './App.css';\r\nimport React, { useState } from 'react';\r\nimport LoginForm from './components/LoginForm';\r\nimport Homepage from './components/Homepage';\r\n\r\nlet detail;\r\nfunction App()\r\n{\r\n  const adminUser = {\r\n    email: \"admin@admin.com\",\r\n    password: \"admin123\"\r\n  }\r\n\r\n  const [user, setUser] = useState({ name: \"\", email: \"\" });\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const Login = details =>\r\n  {\r\n    if (details.email === adminUser.email && details.password === adminUser.password)\r\n    {\r\n      detail = details;\r\n      console.log('Logged In!');\r\n      setUser({\r\n        email: details.name,\r\n        password: details.password\r\n      })\r\n    } else\r\n    {\r\n      console.log('Incorrect Credentials');\r\n      setError('Incorrect Credentials');\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {(user.email !== \"\") ? (\r\n        <Homepage email={detail.email}/>\r\n      ) : (\r\n        <LoginForm Login={Login} error={error} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}